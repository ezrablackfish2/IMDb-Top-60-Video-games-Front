{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Documents/IMDb-Front/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport CustomPosterOverlay from './Poster.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videoState, setVideoState] = useState('unstarted');\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const videoId = 'eaW0tYpxyp0';\n  const onVideoStateChange = event => {\n    setVideoState(event.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [videoState !== 1 && /*#__PURE__*/_jsxDEV(CustomPosterOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: opts,\n      onStateChange: onVideoStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"5DaB5e+8ozvojn2wVaihhsbsmG8=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","YouTube","CustomPosterOverlay","jsxDEV","_jsxDEV","VideoPlayer","_s","videoState","setVideoState","opts","height","width","playerVars","autoplay","videoId","onVideoStateChange","event","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onStateChange","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/IMDb-Front/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport CustomPosterOverlay from './Poster.jsx';\n\nconst VideoPlayer = () => {\n  const [videoState, setVideoState] = useState('unstarted');\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const videoId = 'eaW0tYpxyp0';\n\n  const onVideoStateChange = (event) => {\n    setVideoState(event.data);\n  };\n\n  return (\n    <div>\n      {videoState !== 1  && (\n        <CustomPosterOverlay />\n      )}\n      <YouTube videoId={videoId} opts={opts} onStateChange={onVideoStateChange} />\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,mBAAmB,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAEzD,MAAMS,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,OAAO,GAAG,aAAa;EAE7B,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpCR,aAAa,CAACQ,KAAK,CAACC,IAAI,CAAC;EAC3B,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,GACGX,UAAU,KAAK,CAAC,iBACfH,OAAA,CAACF,mBAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvB,eACDlB,OAAA,CAACH,OAAO;MAACa,OAAO,EAAEA,OAAQ;MAACL,IAAI,EAAEA,IAAK;MAACc,aAAa,EAAER;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzBID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}