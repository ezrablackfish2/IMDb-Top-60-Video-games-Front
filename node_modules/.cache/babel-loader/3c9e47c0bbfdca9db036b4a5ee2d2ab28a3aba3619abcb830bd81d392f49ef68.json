{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Documents/IMDb-Front/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport YouTube from 'react-youtube';\nimport CustomPosterOverlay from './Poster.jsx';\nimport styles from \"../App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  poster,\n  film\n}) => {\n  _s();\n  const [videoState, setVideoState] = useState('unstarted');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playerRef = useRef(null);\n  const opts = {\n    playerVars: {\n      autoplay: 1,\n      loop: 1,\n      playlist: film,\n      controls: 0\n    }\n  };\n  const videoId = film;\n  const onVideoStateChange = event => {\n    setVideoState(event.data);\n  };\n  const toggleVideoPlayPause = () => {\n    const player = playerRef.current;\n    if (player) {\n      if (isPlaying) {\n        player.pauseVideo();\n      } else {\n        player.playVideo();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Player,\n    children: [/*#__PURE__*/_jsxDEV(YouTube, {\n      className: styles.detailtrailer,\n      videoId: videoId,\n      opts: opts,\n      onStateChange: onVideoStateChange,\n      onReady: e => playerRef.current = e.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), videoState !== 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleVideoPlayPause,\n      children: /*#__PURE__*/_jsxDEV(CustomPosterOverlay, {\n        poster: poster\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"u2KojBsCMBRR09Mi54ZV/ExuNq0=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","YouTube","CustomPosterOverlay","styles","jsxDEV","_jsxDEV","VideoPlayer","poster","film","_s","videoState","setVideoState","isPlaying","setIsPlaying","playerRef","opts","playerVars","autoplay","loop","playlist","controls","videoId","onVideoStateChange","event","data","toggleVideoPlayPause","player","current","pauseVideo","playVideo","className","Player","children","detailtrailer","onStateChange","onReady","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ezra/Documents/IMDb-Front/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport YouTube from 'react-youtube';\nimport CustomPosterOverlay from './Poster.jsx';\nimport styles from \"../App.module.css\";\n\ninterface Props {\n\tposter : string;\n\tfilm : string;\n}\n\nconst VideoPlayer = ( {poster, film}: Props) => {\n\tconst [videoState, setVideoState] = useState('unstarted');\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst playerRef = useRef(null);\n\n\tconst opts = {\n\t\tplayerVars: {\n\t\tautoplay: 1,\n\t\tloop: 1,\n\t\tplaylist: film,\n\t\tcontrols: 0,\n\t\t},\n\t};\n\n  const videoId = film;\n\n\tconst onVideoStateChange = (event) => {\n\t\tsetVideoState(event.data);\n};\n\n  const toggleVideoPlayPause = () => {\n    const player = playerRef.current;\n    if (player) {\n      if (isPlaying) {\n        player.pauseVideo();\n      } else {\n        player.playVideo();\n      }\n\t\tsetIsPlaying(!isPlaying);\n\t}\n\t};\n\n\n  return (\n    <div className={styles.Player}>\n      <YouTube \n\t  className={styles.detailtrailer} \n\t  videoId={videoId} \n\t  opts={opts} \n\t  onStateChange={onVideoStateChange}\n\t  onReady={(e) => (playerRef.current = e.target)}\n\t  />\n      {videoState !== 1  && (\n        <div onClick={() => toggleVideoPlayPause}>\n\t      <CustomPosterOverlay poster={poster}/>\n\t</div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,mBAAmB,MAAM,cAAc;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,WAAW,GAAGA,CAAE;EAACC,MAAM;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC;EACzD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMe,IAAI,GAAG;IACZC,UAAU,EAAE;MACZC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAEX,IAAI;MACdY,QAAQ,EAAE;IACV;EACD,CAAC;EAEA,MAAMC,OAAO,GAAGb,IAAI;EAErB,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;IACrCZ,aAAa,CAACY,KAAK,CAACC,IAAI,CAAC;EAC3B,CAAC;EAEC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,MAAM,GAAGZ,SAAS,CAACa,OAAO;IAChC,IAAID,MAAM,EAAE;MACV,IAAId,SAAS,EAAE;QACbc,MAAM,CAACE,UAAU,CAAC,CAAC;MACrB,CAAC,MAAM;QACLF,MAAM,CAACG,SAAS,CAAC,CAAC;MACpB;MACJhB,YAAY,CAAC,CAACD,SAAS,CAAC;IACzB;EACA,CAAC;EAGA,oBACEP,OAAA;IAAKyB,SAAS,EAAE3B,MAAM,CAAC4B,MAAO;IAAAC,QAAA,gBAC5B3B,OAAA,CAACJ,OAAO;MACX6B,SAAS,EAAE3B,MAAM,CAAC8B,aAAc;MAChCZ,OAAO,EAAEA,OAAQ;MACjBN,IAAI,EAAEA,IAAK;MACXmB,aAAa,EAAEZ,kBAAmB;MAClCa,OAAO,EAAGC,CAAC,IAAMtB,SAAS,CAACa,OAAO,GAAGS,CAAC,CAACC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACE/B,UAAU,KAAK,CAAC,iBACfL,OAAA;MAAKqC,OAAO,EAAEA,CAAA,KAAMjB,oBAAqB;MAAAO,QAAA,eAC1C3B,OAAA,CAACH,mBAAmB;QAACK,MAAM,EAAEA;MAAO;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAjDIH,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}