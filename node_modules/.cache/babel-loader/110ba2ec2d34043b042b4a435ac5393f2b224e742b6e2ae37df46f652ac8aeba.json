{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\nfunction useGames(user, token) {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!token) {\n      setLoading(true);\n      apiClient.get(\"\").then(res => {\n        setGames(res.data);\n        setLoading(false);\n      }).catch(err => {\n        setError(err.message);\n        setLoading(false);\n      });\n    } else if (token) {\n      setLoading(true);\n      apiClient.get(\"\", {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Token ${token}`\n        }\n      }).then(res => {\n        setGames(res.data);\n        console.log(res);\n        setLoading(false);\n      }).catch(err => {\n        setError(err.message);\n        setLoading(false);\n      });\n    }\n  }, []);\n  return {\n    games,\n    error,\n    isLoading\n  };\n}\n_s(useGames, \"vO6mfEsOd0naXGtwD6QrGwKFtos=\");\n;\nexport default useGames;","map":{"version":3,"names":["useState","apiClient","useEffect","useGames","user","token","_s","games","setGames","error","setError","isLoading","setLoading","get","then","res","data","catch","err","message","headers","Authorization","console","log"],"sources":["/home/ezra/Documents/IMDb-Front/src/hooks/useGames.js"],"sourcesContent":["import { useState } from \"react\"; \nimport apiClient from \"../services/api-client-axios.js\";\nimport { useEffect } from \"react\";\n\nfunction useGames(user, token) {\n        const [games, setGames ] = useState([]);\n        const [error, setError] = useState(\"\");\n        const [isLoading, setLoading] = useState(false);\n\n        useEffect(() => {\n\t\t\n\t\tif (!token) {\n\t\tsetLoading(true);\n                apiClient.get(\"\")\n                        .then(res =>  {\n\t\t\t\tsetGames(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t})\n                        .catch(err =>{\n\t\t\t\tsetError(err.message)\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t\t} else if (token) {\n                setLoading(true);\n                apiClient.get(\"\" ,\n\t\t\t{\n                                headers: {\n                                'Content-Type': 'application/json',\n                                Authorization: `Token ${token}`,\n                        },\n\t\t\t\t})\n                        .then(res =>  {\n                                setGames(res.data);\n\t\t\t\tconsole.log(res);\n                                setLoading(false);\n                        })\n                        .catch(err =>{\n                                setError(err.message)\n                                setLoading(false);\n                        });\n\t\t}\n\n        }, []);\n\treturn {games, error, isLoading};\n};\n\nexport default useGames;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,iCAAiC;AACvD,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAASC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CE,SAAS,CAAC,MAAM;IAEtB,IAAI,CAACG,KAAK,EAAE;MACZO,UAAU,CAAC,IAAI,CAAC;MACFX,SAAS,CAACY,GAAG,CAAC,EAAE,CAAC,CACRC,IAAI,CAACC,GAAG,IAAK;QAClCP,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC;QAClBJ,UAAU,CAAC,KAAK,CAAC;MAClB,CAAC,CAAC,CACoBK,KAAK,CAACC,GAAG,IAAG;QACjCR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;QACrBP,UAAU,CAAC,KAAK,CAAC;MAClB,CAAC,CAAC;IACH,CAAC,MAAM,IAAIP,KAAK,EAAE;MACJO,UAAU,CAAC,IAAI,CAAC;MAChBX,SAAS,CAACY,GAAG,CAAC,EAAE,EAC7B;QAC6BO,OAAO,EAAE;UACT,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,SAAQhB,KAAM;QACtC;MACpB,CAAC,CAAC,CACmBS,IAAI,CAACC,GAAG,IAAK;QACNP,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC;QAC9CM,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;QACYH,UAAU,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAG;QACLR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;QACrBP,UAAU,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC;IACxB;EAEM,CAAC,EAAE,EAAE,CAAC;EACb,OAAO;IAACL,KAAK;IAAEE,KAAK;IAAEE;EAAS,CAAC;AACjC;AAACL,EAAA,CAxCQH,QAAQ;AAwChB;AAED,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}